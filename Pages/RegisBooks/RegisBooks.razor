@page "/BooksG"

@inject BooksGBLL bookgbll
<style>
    .card{
        width: 500px;
    }
    #Search{
        width: 200px;
        display: flex;
    }

</style>
<EditForm Model="book">
    <div class = "card">
        <div class = "card-header">
            <h1>Registro de Libros</h1>
        </div>
        <div class = "card-body">
            <label class="form-label">Libro ID</label>
            <div id="Search">
                <InputNumber class="form-control" @bind-Value= "book.Idbook"></InputNumber>
                <button class="btn btn-info" >Buscar</button>
            </div>
            <label class="form-label">Titulo</label>
            <InputText class="form-control" @bind-Value="book.tittle"></InputText>
            <label class="form-label">Precio</label>
            <InputNumber class="form-control" @bind-Value= "book.prec"></InputNumber>
        </div>
        <div class = "card-footer">
            <button class = "btn btn-primary">Nuevo</button>
            <button class = "btn btn-success">Guardar</button>
            <button  class = "btn btn-danger">Eliminar</button>
        </div>
    </div>

</EditForm>

@code{

    [Parameter]

    public BooksG book {get; set;}= new BooksG();

    void New(){
        book = new BooksG();
    }

    void Search()
    {
        if(Validate()==false) return;
        var book_exist = bookgbll.Search(book.Idbook);
        if(book_exist !=null)
            book = book_exist;
    }
    void Save(){
        if(bookgbll.Save(book))
          New();
    }

    bool Validate()
    {
        if(string.IsNullOrEmpty(book.tittle))
            return false;
        if(book.prec <=0)
            return false;
        else    
            return true;
    }
}